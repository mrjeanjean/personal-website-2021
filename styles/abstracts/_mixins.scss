@use './../variables' as *;

// RESPONSIVE FONT
//-----------------------------
$root-sizes: (
        "normal": $default-font-size,
        "medium": 16,
        "small": 14,
) !default;

@mixin root-size($size: "normal") {
  font-size: map-get($root-sizes, $size) / 16 * 100%;
}

@mixin font-size($fontsize) {
  // NICE FOR FONT SIZE 18 : #{$fontsize * 0.85 / $default-font-size}rem, 1.1vw, #{$fontsize / $default-font-size}rem
  $raw_size: strip-unit($fontsize);
  font-size: clamp(
          #{$fontsize * 0.85 / $default-font-size}rem, #{(1.1vw / 18 * $raw_size)}, #{$fontsize / $default-font-size}rem
  );
}

$min-font-size: 14;

@mixin font-size-clamped($fontsize){
  $min_size: $fontsize * 0.5;

  @if $min_size < $min-font-size {
    $min_size: $min-font-size;
  }

  font-size: clamp(
          #{$min_size / $default-font-size}rem,
          #{(1.1vw / 18 * $fontsize)},
          #{$fontsize / $default-font-size}rem
  )
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// RESPONSIVE
//-----------------------------
@function calc-rem($pix) {
  $pix: strip-unit($pix);
  @return #{$pix / $default-font-size}rem;
}

@mixin up($size) {
  $size: strip-unit($size);
  @media (min-width: $size * 1px) { @content; }
}
@mixin down($size) {
  $size: strip-unit($size);
  @media (max-width: $size * 1px) { @content; }
}
@mixin between($down, $up) {
  $down: strip-unit($down);
  $up: strip-unit($up);
  @media (min-width: $down * 1px) and (max-width: $up * 1px) { @content; }
}

// HELPERS
//-----------------------------
@mixin on-hover() {
  @media (hover: hover) {
      @content;
  }
}
